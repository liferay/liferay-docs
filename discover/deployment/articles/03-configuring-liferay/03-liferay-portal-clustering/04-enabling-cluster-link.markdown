# Enabling Cluster Link [](id=enabling-cluster-link)

Enabling Cluster Link automatically activates distributed caching. Distributed
caching enables RMI (Remote Method Invocation) cache listeners that replicate
the cache across a cluster. Cluster Link uses 
[Ehcache](http://www.ehcache.org), 
which has robust distributed caching support. The cache is distributed across 
multiple @product@ nodes running concurrently. The Ehcache global settings are in the
[`portal.properties` file](@platform-ref@/7.1-latest/propertiesdoc/portal.properties.html#Ehcache). 

By default Liferay does not copy cached entities between nodes. If an entity is
deleted or changed, for example, Cluster Link sends a *remove* message to the
other nodes to invalidate this entity in their local caches. Requesting that
entity on another node results in a cache *miss*; the entity is then retrieved
from the database and put into the local cache. Entities added to one node's
local cache are not copied to local caches of the other nodes. An attempt to
retrieve a new entity on a node that doesn't have that entity cached results in
a cache *miss*. The miss triggers the node to retrieve the entity from the
database and store it in its local cache. 

To enable Cluster Link, add this property to `portal-ext.properties`: 

    cluster.link.enabled=true
    
When you start @portal@ in a cluster, a log file message shows your cluster's name (e.g., `cluster=liferay-channel-control`): 

    ------------------------------------------------------------------- 
    GMS: address=oz-52865, cluster=liferay-channel-control, physical address=192.168.1.10:50643 
    -------------------------------------------------------------------

## Modifying the Cache Configuration with a Module [](id=modifying-the-cache-configuration-with-a-module)

You should test your system under a load that best simulates the kind of traffic
your system must handle. If you serve a lot of message board messages, your
script should reflect that. If web content is the core of your site, your script
should reflect that too. 

As a result of a load test, you may find that the default distributed cache
settings aren't optimized for your site. In this case, tweak the settings using
a module. You can install the module on each node and change the settings
without taking down the cluster. 

We've made this as easy as possible by
[creating the project](https://dev.liferay.com/documents/10184/741415/portal-cache-override-config.zip) 
for you. Download the project and unzip it into a 
[Liferay Workspace](/develop/tutorials/-/knowledge_base/7-1/liferay-workspace),
in the workspace's `modules` folder. To override the cache settings, you must
only modify one Ehcache configuration file, which you'll find in this folder
structure: 

- `src`
    - `main`
        - `java`
            - `resources`
                - `ehcache`
                    - `override-liferay-multi-vm-clustered.xml`

In the sample project, this file contains a configuration for the `GroupImpl`
object which handles sites. You may wish to add other objects to the cache; in
fact, the default file caches many other objects. For example, if you have
a vibrant community, a large portion of your traffic may be directed at the
message boards portlet, as mentioned above. To cache the threads on the message
boards, configure a block with the `MBMessageImpl` class:

    <cache
        eternal="false"
        maxElementsInMemory="10000"
        name="com.liferay.portlet.messageboards.model.impl.MBMessageImpl"
        overflowToDisk="false"
        timeToIdleSeconds="600"
    >
    </cache>

You can preserve the default settings while customizing them with your own
by extracting Liferay's cluster configuration file and putting it into
your module project. You'll find it in the
`com.liferay.portal.cache.ehcache.impl.jar` file the `[Liferay
Home]/osgi/portal` folder. The file you want is
`liferay-multi-vm-clustered.xml`, in the `/ehcache` folder inside the
`com.liferay.portal.cache.ehcache.impl.jar` file. Once you have the file,
replace the contents of the `override-liferay-multi-vm-clustered.xml` file above
with the contents of this file. Now you'll be using the default configuration as
a starting point. 

Once you've made your changes to the cache, save the file, build, and deploy the
module, and your settings override the default settings. In this way, you can
tweak your cache settings so that your cache performs optimally for the type of
traffic generated by your site. You don't have restart your server to change the
cache settings. This is a great benefit, but beware: since Ehcache doesn't allow
for changes to cache settings while the cache is alive, reconfiguring a cache
while the server is running flushes the cache. 
